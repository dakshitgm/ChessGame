for (var cboard = document.getElementById("chessboard"), i = 0; i < 8; i++) { cboard.innerHTML += "<tr id='" + i + "'>"; for (var j = 0; j < 8; j++)document.getElementById(i).innerHTML += '<td class="cell" id="' + i + j + '" onclick="markPossible(this)" ondrop="markPossible(this)" ondragover="prevdef(event)"></td>', document.getElementById(i + "" + j).style.backgroundColor = i % 2 == 0 && j % 2 == 1 || i % 2 == 1 && j % 2 == 0 ? "#7f5733" : "#fff1e5"; cboard.innerHTML += "</tr>" } var capable_castling = { white: { i: 7, right: !0, left: !0 }, black: { i: 0, right: !0, left: !0 } }, ind = 0, jnd = 0, pos = { black: { elephant: [{ i: ind, j: jnd }, { i: ind, j: 7 - jnd++ }], horse: [{ i: ind, j: jnd }, { i: ind, j: 7 - jnd++ }], camel: [{ i: ind, j: jnd }, { i: ind, j: 7 - jnd++ }], queen: [{ i: ind, j: jnd }], king: [{ i: ind, j: 7 - jnd }], slder: [{ i: ++ind, j: jnd = 0 }, { i: ind, j: ++jnd }, { i: ind, j: ++jnd }, { i: ind, j: ++jnd }, { i: ind, j: ++jnd }, { i: ind, j: ++jnd }, { i: ind, j: ++jnd }, { i: ind, j: ++jnd }] }, white: { elephant: [{ i: ind = 7, j: jnd = 0 }, { i: ind, j: 7 - jnd++ }], horse: [{ i: ind, j: jnd }, { i: ind, j: 7 - jnd++ }], camel: [{ i: ind, j: jnd }, { i: ind, j: 7 - jnd++ }], queen: [{ i: ind, j: jnd }], king: [{ i: ind, j: 7 - jnd }], slder: [{ i: --ind, j: jnd = 0 }, { i: ind, j: ++jnd }, { i: ind, j: ++jnd }, { i: ind, j: ++jnd }, { i: ind, j: ++jnd }, { i: ind, j: ++jnd }, { i: ind, j: ++jnd }, { i: ind, j: ++jnd }] } }; for (color in pos) for (elem in pos[color]) for (value in pos[color][elem]) { i = pos[color][elem][value].i, j = pos[color][elem][value].j; document.getElementById(i + "" + j).innerHTML = "<img class='" + color + "' name='" + elem + "' src='icons/" + elem + "_" + color + ".png' draggable='true' ondragstart='markPossible(this.parentElement)'>" } var intial, end, human = "white", ai = "black", user = human, checkbit = !1, possmov = {}, board = []; function update() { for (var e = 0; e < 8; e++) { board[e] = []; for (var a = 0; a < 8; a++)board[e][a] = document.getElementById(e + "" + a).children } } function autocalculate() { for (var e = {}, a = 0; a < 8; a++)for (var r = 0; r < 8; r++)if (board[a][r].length > 0 && board[a][r][0].className == user) switch (e[a + "" + r] = [], board[a][r][0].name) { case "slder": if ("white" == user) { if (6 == a) for (var s = 1; s <= 2;) { if (board[n = a - s][r].length > 0) break; e[a + "" + r].push(n + "" + r), s++ } else (n = a - 1) >= 0 && 0 == board[n][r].length && (e[a + "" + r][0] = n + "" + r); var n = a - 1; (t = r - 1) >= 0 && n >= 0 && n < 8 && board[n][t].length > 0 && board[n][t][0].className != user && e[a + "" + r].push(n + "" + t), (t = r + 1) < 8 && n >= 0 && n < 8 && board[n][t].length > 0 && board[n][t][0].className != user && e[a + "" + r].push(n + "" + t) } else { if (1 == a) for (s = 1; s <= 2;) { if (board[n = a + s][r].length > 0) break; e[a + "" + r].push(n + "" + r), s++ } else (n = a + 1) < 8 && 0 == board[n][r].length && (e[a + "" + r][0] = n + "" + r); n = a + 1; (t = r - 1) >= 0 && n >= 0 && n < 8 && board[n][t].length > 0 && board[n][t][0].className != user && e[a + "" + r].push(n + "" + t), (t = r + 1) < 8 && n >= 0 && n < 8 && board[n][t].length > 0 && board[n][t][0].className != user && e[a + "" + r].push(n + "" + t) } break; case "elephant": n = a + 1; for (var t = r; n < 8 && !(board[n][t].length > 0 && board[n][t][0].className == user) && (e[a + "" + r].push(n + "" + t), !(board[n][t].length > 0 && board[n][t][0].className != user));)n++; for (n = a - 1; n >= 0 && !(board[n][t].length > 0 && board[n][t][0].className == user) && (e[a + "" + r].push(n + "" + t), !(board[n][t].length > 0 && board[n][t][0].className != user));)n--; for (n = a, t = r + 1; t < 8 && !(board[n][t].length > 0 && board[n][t][0].className == user) && (e[a + "" + r].push(n + "" + t), s++, !(board[n][t].length > 0 && board[n][t][0].className != user));)t++; for (t = r - 1; t >= 0 && !(board[n][t].length > 0 && board[n][t][0].className == user) && (e[a + "" + r].push(n + "" + t), !(board[n][t].length > 0 && board[n][t][0].className != user));)t--; break; case "camel": for (n = a - 1, t = r - 1, s = 0; n >= 0 && t >= 0 && !(board[n][t].length > 0 && board[n][t][0].className == user) && (e[a + "" + r].push(n + "" + t), !(board[n][t].length > 0 && board[n][t][0].className != user));)n--, t--; for (n = a - 1, t = r + 1; n >= 0 && t < 8 && !(board[n][t].length > 0 && board[n][t][0].className == user) && (e[a + "" + r].push(n + "" + t), !(board[n][t].length > 0 && board[n][t][0].className != user));)n--, t++; for (n = a + 1, t = r - 1; n < 8 && t >= 0 && !(board[n][t].length > 0 && board[n][t][0].className == user) && (e[a + "" + r].push(n + "" + t), !(board[n][t].length > 0 && board[n][t][0].className != user));)n++, t--; for (n = a + 1, t = r + 1; n < 8 && t < 8 && !(board[n][t].length > 0 && board[n][t][0].className == user) && (e[a + "" + r].push(n + "" + t), !(board[n][t].length > 0 && board[n][t][0].className != user));)n++, t++; break; case "queen": for (n = a + 1, t = r; n < 8 && !(board[n][t].length > 0 && board[n][t][0].className == user) && (e[a + "" + r].push(n + "" + t), !(board[n][t].length > 0 && board[n][t][0].className != user));)n++; for (n = a - 1; n >= 0 && !(board[n][t].length > 0 && board[n][t][0].className == user) && (e[a + "" + r].push(n + "" + t), !(board[n][t].length > 0 && board[n][t][0].className != user));)n--; for (n = a, t = r + 1; t < 8 && !(board[n][t].length > 0 && board[n][t][0].className == user) && (e[a + "" + r].push(n + "" + t), !(board[n][t].length > 0 && board[n][t][0].className != user));)t++; for (t = r - 1; t >= 0 && !(board[n][t].length > 0 && board[n][t][0].className == user) && (e[a + "" + r].push(n + "" + t), !(board[n][t].length > 0 && board[n][t][0].className != user));)t--; for (n = a - 1, t = r - 1; n >= 0 && t >= 0 && !(board[n][t].length > 0 && board[n][t][0].className == user) && (e[a + "" + r].push(n + "" + t), !(board[n][t].length > 0 && board[n][t][0].className != user));)n--, t--; for (n = a - 1, t = r + 1; n >= 0 && t < 8 && !(board[n][t].length > 0 && board[n][t][0].className == user) && (e[a + "" + r].push(n + "" + t), !(board[n][t].length > 0 && board[n][t][0].className != user));)n--, t++; for (n = a + 1, t = r - 1; n < 8 && t >= 0 && !(board[n][t].length > 0 && board[n][t][0].className == user) && (e[a + "" + r].push(n + "" + t), !(board[n][t].length > 0 && board[n][t][0].className != user));)n++, t--; for (n = a + 1, t = r + 1; n < 8 && t < 8 && !(board[n][t].length > 0 && board[n][t][0].className == user) && (e[a + "" + r].push(n + "" + t), !(board[n][t].length > 0 && board[n][t][0].className != user));)n++, t++; break; case "horse": t = r + 1; (n = a + 2) < 8 && t < 8 && (0 == board[n][t].length || board[n][t][0].className != user) && e[a + "" + r].push(n + "" + t), t = r - 1, n < 8 && t >= 0 && (0 == board[n][t].length || board[n][t][0].className != user) && e[a + "" + r].push(n + "" + t), (n = a - 2) >= 0 && t >= 0 && (0 == board[n][t].length || board[n][t][0].className != user) && e[a + "" + r].push(n + "" + t), t = r + 1, n >= 0 && t < 8 && (0 == board[n][t].length || board[n][t][0].className != user) && e[a + "" + r].push(n + "" + t), t = r + 2, (n = a + 1) < 8 && t < 8 && (0 == board[n][t].length || board[n][t][0].className != user) && e[a + "" + r].push(n + "" + t), (n = a - 1) >= 0 && t < 8 && (0 == board[n][t].length || board[n][t][0].className != user) && e[a + "" + r].push(n + "" + t), t = r - 2, n >= 0 && t >= 0 && (0 == board[n][t].length || board[n][t][0].className != user) && e[a + "" + r].push(n + "" + t), (n = a + 1) < 8 && t >= 0 && (0 == board[n][t].length || board[n][t][0].className != user) && e[a + "" + r].push(n + "" + t); break; case "king": s = 0; (n = a + 1) < 8 && (0 == board[n][r].length || board[n][r][0].className != user) && e[a + "" + r].push(n + "" + r), (n = a - 1) >= 0 && (0 == board[n][r].length || board[n][r][0].className != user) && e[a + "" + r].push(n + "" + r), (n = r + 1) < 8 && (0 == board[a][n].length || board[a][n][0].className != user) && e[a + "" + r].push(a + "" + n), (n = r - 1) >= 0 && (0 == board[a][n].length || board[a][n][0].className != user) && e[a + "" + r].push(a + "" + n); t = r - 1; (n = a - 1) >= 0 && t >= 0 && (0 == board[n][t].length || board[n][t][0].className != user) && e[a + "" + r].push(n + "" + t), t = r + 1, (n = a - 1) >= 0 && t < 8 && (0 == board[n][t].length || board[n][t][0].className != user) && e[a + "" + r].push(n + "" + t), t = r + 1, (n = a + 1) < 8 && t < 8 && (0 == board[n][t].length || board[n][t][0].className != user) && e[a + "" + r].push(n + "" + t), t = r - 1, (n = a + 1) < 8 && t >= 0 && (0 == board[n][t].length || board[n][t][0].className != user) && e[a + "" + r].push(n + "" + t) }return e } function getfilter(e) { var a = {}, r = document.getElementById("empty").children; for (arre in e) { var s = arre % 10, n = (arre - s) / 10; for (values in a[arre] = [], e[arre]) { var t = e[arre][values] % 10, o = (e[arre][values] - t) / 10, l = board[o][t]; board[o][t] = board[n][s], board[n][s] = r, swapuser(), ifCheck() || a[arre].push(e[arre][values]), swapuser(), board[n][s] = board[o][t], board[o][t] = l } } if (!checkbit) { if (capable_castling[user].left) { var d = capable_castling[user].i; if (0 == board[d][2].length && 0 == board[d][1].length && a[d + "4"].includes(d + "3")) { swapuser(); var i = autocalculate(), c = !0; for (arre in i) if (i[arre].includes(d + "2")) { c = !1; break } swapuser(), c && a[d + "4"].push(d + "2") } } if (capable_castling[user].right) { d = capable_castling[user].i; if (0 == board[d][6].length && a[d + "4"].includes(d + "5")) { swapuser(); i = autocalculate(), c = !0; for (arre in i) if (i[arre].includes(d + "6")) { c = !1; break } swapuser(), c && a[d + "4"].push(d + "6") } } } return a } update(), intial = (new Date).getTime(), possmov = getfilter(autocalculate()), end = (new Date).getTime(), console.log(end - intial); var high, khatra, king_pos, prev = possmov, cur_pos = "", currenttroop = "", cur_tr_po_mov = [], cur_tr_po_mov_bg = []; cboard = document.getElementById("chessboard"); async function markPossible(e) { if (e.children.length > 0 && "dot" == e.lastChild.classList[0]) { for (document.getElementsByClassName("check").length > 0 && ($(".check").remove(), document.getElementById("results").innerHTML = "", document.getElementById("results").style.display = "none"), e.firstChild == e.lastChild ? new Audio("move.wav").play() : new Audio("kill.wav").play(), e.innerHTML = currenttroop.innerHTML, document.getElementById(cur_pos).innerHTML = ""; document.getElementsByClassName("dot").length > 0;)$(".dot").remove(); if ("king" == e.children[0].name && currenttroop.getAttribute("id") == capable_castling[user].i + "4" && (e.getAttribute("id") == capable_castling[user].i + "2" ? (document.getElementById(capable_castling[user].i + "3").innerHTML = document.getElementById(capable_castling[user].i + "0").innerHTML, document.getElementById(capable_castling[user].i + "0").innerHTML = "") : e.getAttribute("id") == capable_castling[user].i + "6" && (document.getElementById(capable_castling[user].i + "5").innerHTML = document.getElementById(capable_castling[user].i + "7").innerHTML, document.getElementById(capable_castling[user].i + "7").innerHTML = "")), "king" == e.children[0].name && (capable_castling[user].left = !1, capable_castling[user].right = !1), "elephant" == e.children[0].name && currenttroop.getAttribute("id") == capable_castling[user].i + "0" && (capable_castling[user].left = !1), "slder" == e.children[0].name && (0 == Math.floor(e.getAttribute("id") / 10) || 7 == Math.floor(e.getAttribute("id") / 10))) { var a = ["queen", "horse", "camel", "elephant"], r = document.getElementById("choosee"); for (value in a) r.innerHTML += "<input type='radio' id='" + a[value] + "' value='" + a[value] + "' name='choose_option' >", r.innerHTML += "<label for='" + a[value] + "'><img src='icons/" + a[value] + "_" + user + ".png'></lable>"; for (var s = 0; s < 8; s++)for (var n = 0; n < 8; n++)document.getElementById(s + "" + n).style.pointerEvents = "none"; let t = new Promise((e, a) => { document.getElementsByName("choose_option")[0].onclick = function () { e(document.getElementsByName("choose_option")[0].value) }, document.getElementsByName("choose_option")[1].onclick = function () { e(document.getElementsByName("choose_option")[1].value) }, document.getElementsByName("choose_option")[2].onclick = function () { e(document.getElementsByName("choose_option")[2].value) }, document.getElementsByName("choose_option")[3].onclick = function () { e(document.getElementsByName("choose_option")[3].value) } }), o = await t; for (s = 0; s < 8; s++)for (n = 0; n < 8; n++)document.getElementById(s + "" + n).style.pointerEvents = "auto"; e.innerHTML = "<img class='" + user + "' name='" + o + "' src='icons/" + o + "_" + user + ".png'>", document.getElementById("choosee").innerHTML = "" } cur_pos = "", currenttroop = "", cur_tr_po_mov = [], cur_tr_po_mov_bg = [], checkbit = ifCheck(), update(), swapuser(), possmov = getfilter(autocalculate()); var t = result(); if ("checkmate" == t ? (document.getElementById("results").style.display = "block", audio = new Audio("mate.wav"), audio.play(), (khatra = document.createElement("div")).classList.add("mate"), document.getElementById(king_pos).appendChild(khatra), document.getElementById("results").innerHTML = "CHECK-MATE") : checkbit ? (document.getElementById("results").style.display = "block", audio = new Audio("check.wav"), audio.play(), (khatra = document.createElement("div")).classList.add("check"), document.getElementById(king_pos).appendChild(khatra), document.getElementById("results").innerHTML = "CHECK") : "stillmate" == t && (document.getElementById("results").style.display = "block", audio = new Audio("mate.wav"), audio.play(), document.getElementById("results").innerHTML = "STILL-MATE"), null == t && donext(), user == ai) for (els in document.getElementById("chessboard").style.transform = "rotate(180deg)", document.getElementsByClassName("cell")) els < 64 && (document.getElementsByClassName("cell")[els].style.transform = "rotate(180deg)"); else for (els in document.getElementById("chessboard").style.transform = "rotate(360deg)", document.getElementsByClassName("cell")) els < 64 && (document.getElementsByClassName("cell")[els].style.transform = "rotate(0deg)") } else if (e.children.length > 0 && e.children[0].className == user) { document.getElementsByClassName("dot").length > 0 && $(".dot").remove(), cur_pos = "", currenttroop = "", cur_tr_po_mov = [], cur_tr_po_mov_bg = []; var o = e.getAttribute("id"); cur_pos = o, currenttroop = e; for (s = 0; s < possmov[o].length; s++)(high = document.createElement("div")).classList.add("dot"), document.getElementById(possmov[o][s]).appendChild(high), cur_tr_po_mov.push(possmov[o][s]) } } function ifCheck() { for (var e = 0; e < 8; e++)for (var a = 0; a < 8; a++)board[e][a].length > 0 && "king" == board[e][a][0].name && board[e][a][0].className != user && (king_pos = e + "" + a); var r = autocalculate(); for (arr in r) if (r[arr].includes(king_pos)) return !0; return !1 } function swapuser() { user = user == human ? ai : human } function prevdef(e) { e.preventDefault() } function result() { var e = !0; for (arr in possmov) if (possmov[arr].length > 0) { e = !1; break } return checkbit && e ? "checkmate" : e ? "stillmate" : null } var indexes = { 0: [0, 0], 1: [0, 1], 2: [0, 2], 3: [0, 3], 4: [0, 4], 5: [0, 5], 6: [0, 6], 7: [0, 7], 10: [1, 0], 11: [1, 1], 12: [1, 2], 13: [1, 3], 14: [1, 4], 15: [1, 5], 16: [1, 6], 17: [1, 7], 20: [2, 0], 21: [2, 1], 22: [2, 2], 23: [2, 3], 24: [2, 4], 25: [2, 5], 26: [2, 6], 27: [2, 7], 30: [3, 0], 31: [3, 1], 32: [3, 2], 33: [3, 3], 34: [3, 4], 35: [3, 5], 36: [3, 6], 37: [3, 7], 40: [4, 0], 41: [4, 1], 42: [4, 2], 43: [4, 3], 44: [4, 4], 45: [4, 5], 46: [4, 6], 47: [4, 7], 50: [5, 0], 51: [5, 1], 52: [5, 2], 53: [5, 3], 54: [5, 4], 55: [5, 5], 56: [5, 6], 57: [5, 7], 60: [6, 0], 61: [6, 1], 62: [6, 2], 63: [6, 3], 64: [6, 4], 65: [6, 5], 66: [6, 6], 67: [6, 7], 70: [7, 0], 71: [7, 1], 72: [7, 2], 73: [7, 3], 74: [7, 4], 75: [7, 5], 76: [7, 6], 77: [7, 7] };